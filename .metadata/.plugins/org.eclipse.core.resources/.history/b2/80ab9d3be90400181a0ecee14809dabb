public class Model {
	private static int player1 = 1;
	private static int player2 = 2;
	private int[][] board;

	public Model() {
		board = new int[8][8];
		setNewGame();
	}

	public int getRow() {
		return board.length;
	}

	public int getCol() {
		return board[0].length;
	}

	public int getPlayer(int row, int col) {
		return board[row][col];
	}

	public void setDisk(int row, int col, int player) {
		if (isLegalPlay(row, col, player)) {
			board[row][col] = player;
		}
	}

	private void setNewGame() {
		board[3][3] = player1;
		board[4][4] = player1;
		board[3][4] = player2;
		board[4][3] = player2;
	}

	private boolean isLegalPlay(int row, int col, int player) {
		return true;
	}

	private boolean checkIfSurrounded(int row, int col, int dir) {
		if (checkNeighbours(row - dir, col - dir, dir)) {
			dir += -1;
		}
		return true;
	}

	private boolean checkNeighbours(int row, int col, int player) {
		return true;
	}

	private boolean isInsideBoard(int row, int col) {
		return row >= 0 && row < 8 && col >= 0 && col < 8;
	}

	private boolean checkIfWin() {
		return true;
	}

	private boolean checkUp(int row, int col, int player) {
		if (!isInsideBoard(row, col)) {
			return false;
		}
		 
		if (player != getPlayer(row - 1, col)) {
			checkUp(row - 1, col, player);
		}
		return true;
	}
	private boolean checkUpRight(int row, int col, int player) {
		if (!isInsideBoard(row, col)) {
			return false;
		}
		 
		if (player != getPlayer(row - 1, col + 1)) {
			checkUp(row - 1, col + 1, player);
		}
		return true;
	}
	private boolean checkRight(int row, int col, int player) {
		if (!isInsideBoard(row, col)) {
			return false;
		}
		 
		if (player != getPlayer(row, col + 1)) {
			checkUp(row, col + 1, player);
		}
		return true;
	}
	private boolean checkDownRight(int row, int col, int player) {
		if (!isInsideBoard(row, col)) {
			return false;
		}
		 
		if (player != getPlayer(row + 1, col + 1)) {
			checkUp(row + 1, col + 1, player);
		}
		return true;
	}
	private boolean checkDown(int row, int col, int player) {
		if (!isInsideBoard(row, col)) {
			return false;
		}
		 
		if (player != getPlayer(row + 1, col)) {
			checkUp(row + 1, col, player);
		}
		return true;
	}

}